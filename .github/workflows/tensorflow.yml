name: tensorflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]
        tensorflow-version: ["~=2.9.0", "~=2.10.0", "~=2.11.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            **/setup.cfg
            requirements/*.txt
      - name: Install Ubuntu packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y protobuf-compiler
      - name: Install Merlin dependencies
        run: |
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          pip install "pandas>=1.2.0,<1.4.0dev0"
          pip install "NVTabular@git+https://github.com/NVIDIA-Merlin/NVTabular.git@$branch"
          pip install "merlin-dataloader@git+https://github.com/NVIDIA-Merlin/dataloader.git@$branch"
          pip install "merlin-core@git+https://github.com/NVIDIA-Merlin/core.git@$branch"
          pip install "merlin-systems@git+https://github.com/NVIDIA-Merlin/systems.git@$branch"
      - name: Install dependencies
        run: |
          python -m pip install "tensorflow${{ matrix.tensorflow-version }}"
          python -m pip install .[tensorflow-dev]
          pip install tritonclient[all]
      - name: Build
        run: |
          python setup.py develop
      - name: Run unittests
        run: |
          make tests-tf
      - name: Generate package for pypi
        run: |
          python setup.py sdist
      - name: Upload artifacts to github
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.8 ]
        os: [ ubuntu-latest ]
        tensorflow-version: ["~=2.9.0", "~=2.10.0", "~=2.11.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            **/setup.cfg
            requirements/*.txt
      - uses: abbbi/github-actions-tune@v1
      - name: Install Ubuntu packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y protobuf-compiler
      - name: Install Merlin dependencies
        run: |
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          pip install "pandas>=1.2.0,<1.4.0dev0"
          pip install "NVTabular@git+https://github.com/NVIDIA-Merlin/NVTabular.git@$branch"
          pip install "merlin-dataloader@git+https://github.com/NVIDIA-Merlin/dataloader.git@$branch"
          pip install "merlin-core@git+https://github.com/NVIDIA-Merlin/core.git@$branch"
          pip install "merlin-systems@git+https://github.com/NVIDIA-Merlin/systems.git@$branch"
      - name: Install dependencies
        run: |
          python -m pip install "tensorflow${{ matrix.tensorflow-version }}"
          python -m pip install .[tensorflow-dev]
          pip install tritonclient[all]
      - name: Build
        run: |
          python setup.py develop
      - name: Run unittests
        run: |
          make tests-tf-examples