name: GPU CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "pull-request/[0-9]+"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  gpu-ci-tensorflow:
    runs-on: linux-amd64-gpu-p100-latest-1
    container:
      image: nvcr.io/nvidia/merlin/merlin-tensorflow:nightly
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      options: --shm-size=1G
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: |
          nvidia-smi
          pip install tox
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          if [[ "${{ github.ref }}" != 'refs/heads/main' ]]; then
              extra_pytest_markers="and changed"
          fi
          PYTEST_MARKERS="unit and not (examples or integration or notebook) and (singlegpu or not multigpu) $extra_pytest_markers" MERLIN_BRANCH=$branch COMPARE_BRANCH=${{ github.base_ref }} tox -e gpu

  gpu-ci-pytorch:
    runs-on: linux-amd64-gpu-p100-latest-1
    container:
      image: nvcr.io/nvidia/merlin/merlin-pytorch:nightly
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      options: --shm-size=1G
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: |
          nvidia-smi
          pip install tox
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          if [[ "${{ github.ref }}" != 'refs/heads/main' ]]; then
              extra_pytest_markers="and changed"
          fi
          PYTEST_MARKERS="unit and not (examples or integration or notebook) and (singlegpu or not multigpu) $extra_pytest_markers" MERLIN_BRANCH=$branch COMPARE_BRANCH=${{ github.base_ref }} tox -e gpu

  gpu-ci-tensorflow-examples:
    runs-on: linux-amd64-gpu-p100-latest-1
    container:
      image: nvcr.io/nvidia/merlin/merlin-tensorflow:nightly
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      options: --shm-size=1G
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: |
          pip install tox
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          if [[ "${{ github.ref }}" != 'refs/heads/main' ]]; then
              extra_pytest_markers="and changed"
          fi
          PYTEST_MARKERS="(examples or notebook) $extra_pytest_markers" MERLIN_BRANCH=$branch COMPARE_BRANCH=${{ github.base_ref }} tox -e gpu

  gpu-ci-pytorch-examples:
    runs-on: linux-amd64-gpu-p100-latest-1
    container:
      image: nvcr.io/nvidia/merlin/merlin-pytorch:nightly
      env:
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      options: --shm-size=1G
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run tests
        run: |
          pip install tox
          ref_type=${{ github.ref_type }}
          branch=main
          if [[ $ref_type == "tag"* ]]
          then
            git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +refs/heads/release*:refs/remotes/origin/release*
            branch=$(git branch -r --contains ${{ github.ref_name }} --list '*release*' --format "%(refname:short)" | sed -e 's/^origin\///')
          fi
          if [[ "${{ github.ref }}" != 'refs/heads/main' ]]; then
              extra_pytest_markers="and changed"
          fi
          PYTEST_MARKERS="(examples or notebook) $extra_pytest_markers" MERLIN_BRANCH=$branch COMPARE_BRANCH=${{ github.base_ref }} tox -e gpu
