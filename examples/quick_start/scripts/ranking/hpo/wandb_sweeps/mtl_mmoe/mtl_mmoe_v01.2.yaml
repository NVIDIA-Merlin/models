program: ranking_train_eval.py
method: bayes
metric:
  name: auc_improv_avg-final
  goal: maximize
parameters:
  activation:
    distribution: categorical
    values:
      - relu
  mmoe_num_mlp_experts:
    distribution: categorical
    values:
      - 2
  model:
    distribution: categorical
    values:
      - mmoe
  dropout:
    distribution: categorical
    values:
      - 0.0850257380662196
  embeddings_l2_reg:
    distribution: categorical
    values:
      - 3.98316733749223e-08
  embedding_sizes_multiplier:
    distribution: categorical
    values:
      - 5
  l2_reg:
    distribution: categorical
    values:
      - 3.648757114342771e-05
  lr:
    distribution: categorical
    values:
      - 0.0011473145997918342
  lr_decay_rate:
    distribution: categorical
    values:
      - 0.988475173661674
  lr_decay_steps:
    distribution: categorical
    values:
      - 111
  expert_mlp_layers:
    distribution: categorical
    values:
      - 128,64
  gate_dim:
    distribution: categorical
    values:
      - 128
  use_task_towers:
    distribution: categorical
    values:
      - False
  tower_layers:
    distribution: categorical
    values:
      - 64
  tasks:
    distribution: categorical
    values:
      - all
  train_batch_size:
    distribution: categorical
    values:
      - 65536
  eval_batch_size:
    distribution: categorical
    values:
      - 65536
  epochs:
    distribution: categorical
    values:
      - 1


  mtl_loss_weight_click:
    distribution: categorical
    values:
      - 5
  mtl_loss_weight_like:
    distribution: int_uniform
    min: 1
    max: 10
  mtl_loss_weight_share:
    distribution: int_uniform
    min: 1
    max: 10
  mtl_loss_weight_follow:
    distribution: int_uniform
    min: 1
    max: 10
  mtl_loss_weight_watching_times:
    distribution: int_uniform
    min: 1
    max: 10  

  mtl_pos_class_weight_click:
    distribution: int_uniform
    min: 1
    max: 10
  mtl_pos_class_weight_like:
    distribution: int_uniform
    min: 1
    max: 100
  mtl_pos_class_weight_share:
    distribution: int_uniform
    min: 1
    max: 100
  mtl_pos_class_weight_follow:
    distribution: int_uniform
    min: 1
    max: 100