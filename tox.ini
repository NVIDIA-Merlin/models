; For all tests that run in Github Actions, see
; .github/workflows/cpu-ci.yml for the workflow definition.

[tox]
envlist = py38-gpu,py38-multi-gpu

[testenv]
commands =
    pip install --upgrade pip
    pip install -e .[all]

[testenv:py38-gpu]
passenv = 
    OPAL_PREFIX
    WANDB_API_KEY
sitepackages = true
; Runs in: Internal Jenkins
; Runs GPU-based tests.
; The jenkins jobs run on an image based on merlin-hugectr. This will include all cudf configuration
; and other gpu-specific libraries that we can enxpect will always exist. Thus, we don't need
; to install requirements.txt yet. As we get better at python environment isolation, we will
; need to add some back.
deps =
    -rrequirements/dev.txt
    tensorflow<2.10
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git
    python -m pytest --cov-report term --cov merlin -rxs {posargs:tests/unit}

[testenv:py38-multi-gpu]
passenv =
    OPAL_PREFIX
sitepackages = true
; Runs in: Internal Jenkins
; Runs GPU-based tests.
; The jenkins jobs run on an image based on merlin-hugectr. This will include all cudf configuration
; and other gpu-specific libraries that we can enxpect will always exist. Thus, we don't need
; to install requirements.txt yet. As we get better at python environment isolation, we will
; need to add some back.
deps =
    -rrequirements/dev.txt
    tensorflow<2.10
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
allowlist_externals =
    horovodrun
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/nvtabular.git
    horovodrun -np 2 sh examples/usecases/multi-gpu/hvd_wrapper.sh python -m pytest -m horovod -rxs tests/unit
