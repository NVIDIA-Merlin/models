; For all tests that run in Github Actions, see
; .github/workflows/cpu-ci.yml for the workflow definition.

[tox]
envlist = gpu,gpu-cu11,multi-gpu,horovod-cpu,nvtabular-cpu,systems-cpu,transformers4rec-cpu,docs,docs-multi

[testenv]
commands =
    pip install --upgrade pip
    pip install -e .[all]

[testenv:gpu-cu11]
; Runs in: GitHub Actions
; Runs GPU-based tests.
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
    PIP_EXTRA_INDEX_URL=https://pypi.nvidia.com
    PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
allowlist_externals =
    bash
passenv =
    CUDA_VISIBLE_DEVICES
deps =
    -rrequirements/test.txt
    git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/NVTabular.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/systems.git@{env:MERLIN_BRANCH}
    nvidia-cudnn-cu11~=8.6.0
    cudf-cu11=={env:RAPIDS_VERSION}
    dask-cudf-cu11=={env:RAPIDS_VERSION}
commands =
    bash -c 'python -m pytest --cov-report term --cov merlin -m "{env:PYTEST_MARKERS}" -rxs {posargs:tests} || ([ $? = 5 ] && exit 0 || exit $?)'

[testenv:gpu]
; Runs in: Github Actions
; Runs GPU-based tests.
allowlist_externals =
    bash
    cp
deps =
    -rrequirements/test.txt
    git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/NVTabular.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/systems.git@{env:MERLIN_BRANCH}
passenv =
    OPAL_PREFIX
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
sitepackages=true
commands =
    bash -c 'cp $(python -c "import sys; print(sys.base_prefix)")/lib/*.so* $(python -c "import sys; print(sys.prefix)")/lib'
    bash -c 'python -m pytest --cov-report term --cov merlin -m "{env:PYTEST_MARKERS}" -rxs {posargs:tests} || ([ $? = 5 ] && exit 0 || exit $?)'


[testenv:multi-gpu]
; Runs in: Github Actions
; Runs GPU-based tests.
allowlist_externals =
    horovodrun
    sh
    bash
passenv =
    OPAL_PREFIX
setenv =
    TF_GPU_ALLOCATOR=cuda_malloc_async
    CPATH={env:CPATH}{:}{envdir}/hugectr/include
    LD_LIBRARY_PATH=${envdir}/hugectr/include/lib{:}/usr/local/lib/python3.10/dist-packages/tensorflow{:}{env:LD_LIBRARY_PATH}
    LIBRARY_PATH=${envdir}/hugectr/lib{:}{env:LIBRARY_PATH}
sitepackages=true
deps =
    git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/NVTabular.git@{env:MERLIN_BRANCH}
commands =
    sh examples/usecases/multi-gpu/install_sparse_operation_kit.sh {envdir}
    bash -c 'horovodrun -np 2 sh examples/usecases/multi-gpu/hvd_wrapper.sh python -m pytest -m "unit and horovod {env:EXTRA_PYTEST_MARKERS}" -rxs {posargs:tests} || ([ $? = 5 ] && exit 0 || exit $?)'

[testenv:horovod-cpu]
setenv =
    HOROVOD_WITH_MPI=1
    HOROVOD_WITH_TENSORFLOW=1
    PATH={env:PATH}{:}{envdir}/env/bin
    LD_LIBRARY_PATH={env:LD_LIBRARY_PATH}{:}{envdir}/env/lib
deps =
    git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH}
    git+https://github.com/NVIDIA-Merlin/NVTabular.git@{env:MERLIN_BRANCH}
commands =
    conda update --yes --name base --channel defaults conda
    conda env create --prefix {envdir}/env --file requirements/horovod-cpu-environment.yml --force
    {envdir}/env/bin/python -m pip install 'horovod==0.27.0' --no-cache-dir
    {envdir}/env/bin/horovodrun --check-build
    {envdir}/env/bin/horovodrun -np 2 sh examples/usecases/multi-gpu/hvd_wrapper.sh pytest -m "unit and horovod {env:EXTRA_PYTEST_MARKERS}" -rxs {posargs:tests}

[testenv:nvtabular-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands =
    ; the GIT_COMMIT env is the current commit of the models repo
    git clone --depth 1 --branch {env:MERLIN_BRANCH:main} https://github.com/NVIDIA-Merlin/NVTabular.git nvtabular-{env:GIT_COMMIT}
    python -m pip install --upgrade "./nvtabular-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./nvtabular-{env:GIT_COMMIT}/requirements/test.txt"
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH:main}
    python -m pip install .
    python -m pytest nvtabular-{env:GIT_COMMIT}/tests/unit

[testenv:systems-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
deps =
    -rrequirements/base.txt
    -rrequirements/dev.txt
commands =
    ; the GIT_COMMIT env is the current commit of the models repo
    git clone --depth 1 --branch {env:MERLIN_BRANCH:main} https://github.com/NVIDIA-Merlin/systems.git systems-{env:GIT_COMMIT}
    python -m pip install --upgrade "./systems-{env:GIT_COMMIT}"
    python -m pip install --upgrade -r "./systems-{env:GIT_COMMIT}/requirements/test-cpu.txt"
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/NVTabular.git@{env:MERLIN_BRANCH:main}
    python -m pip install .
    python -m pytest -m "not notebook" systems-{env:GIT_COMMIT}/tests/unit

[testenv:transformers4rec-cpu]
passenv=GIT_COMMIT
allowlist_externals = git
commands =
    ; the GIT_COMMIT env is the current commit of the models repo
    git clone --depth 1 --branch {env:MERLIN_BRANCH:main} https://github.com/NVIDIA-Merlin/Transformers4Rec.git Transformers4Rec-{env:GIT_COMMIT}
    python -m pip install --upgrade -r "./Transformers4Rec-{env:GIT_COMMIT}/requirements/test.txt"
    python -m pip install --upgrade "./Transformers4Rec-{env:GIT_COMMIT}"
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git@{env:MERLIN_BRANCH:main}
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/dataloader.git@{env:MERLIN_BRANCH:main}
    python -m pip install .
    python -m pytest Transformers4Rec-{env:GIT_COMMIT}/tests/unit

[testenv:docs]
; Runs in: Github Actions
; Generates documentation with sphinx. There are other steps in the Github Actions workflow
; to publish the documentation on release.
changedir = {toxinidir}
deps =
    -rrequirements/docs.txt
    -rrequirements/test.txt
    git+https://github.com/NVIDIA-Merlin/core.git
    git+https://github.com/NVIDIA-Merlin/dataloader.git
    git+https://github.com/NVIDIA-Merlin/NVTabular.git
commands =
    python -m sphinx.cmd.build -E -P -b html docs/source docs/build/html

[testenv:docs-multi]
; Run the multi-version build that is shown on GitHub Pages.
changedir = {toxinidir}
deps =
    -rrequirements/docs.txt
    -rrequirements/test.txt
    git+https://github.com/NVIDIA-Merlin/core.git
    git+https://github.com/NVIDIA-Merlin/dataloader.git
    git+https://github.com/NVIDIA-Merlin/NVTabular.git
commands =
    sphinx-multiversion --dump-metadata docs/source docs/build/html | jq "keys"
    sphinx-multiversion docs/source docs/build/html
